// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	mycode "k8s-learn/apiserver/pkg/apis/mycode"
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*MyController)(nil), (*mycode.MyController)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MyController_To_mycode_MyController(a.(*MyController), b.(*mycode.MyController), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mycode.MyController)(nil), (*MyController)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mycode_MyController_To_v1alpha1_MyController(a.(*mycode.MyController), b.(*MyController), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MyControllerList)(nil), (*mycode.MyControllerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MyControllerList_To_mycode_MyControllerList(a.(*MyControllerList), b.(*mycode.MyControllerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mycode.MyControllerList)(nil), (*MyControllerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mycode_MyControllerList_To_v1alpha1_MyControllerList(a.(*mycode.MyControllerList), b.(*MyControllerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MyControllerSpec)(nil), (*mycode.MyControllerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MyControllerSpec_To_mycode_MyControllerSpec(a.(*MyControllerSpec), b.(*mycode.MyControllerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mycode.MyControllerSpec)(nil), (*MyControllerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mycode_MyControllerSpec_To_v1alpha1_MyControllerSpec(a.(*mycode.MyControllerSpec), b.(*MyControllerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MyControllerStatus)(nil), (*mycode.MyControllerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MyControllerStatus_To_mycode_MyControllerStatus(a.(*MyControllerStatus), b.(*mycode.MyControllerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mycode.MyControllerStatus)(nil), (*MyControllerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mycode_MyControllerStatus_To_v1alpha1_MyControllerStatus(a.(*mycode.MyControllerStatus), b.(*MyControllerStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_MyController_To_mycode_MyController(in *MyController, out *mycode.MyController, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_MyControllerSpec_To_mycode_MyControllerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_MyControllerStatus_To_mycode_MyControllerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_MyController_To_mycode_MyController is an autogenerated conversion function.
func Convert_v1alpha1_MyController_To_mycode_MyController(in *MyController, out *mycode.MyController, s conversion.Scope) error {
	return autoConvert_v1alpha1_MyController_To_mycode_MyController(in, out, s)
}

func autoConvert_mycode_MyController_To_v1alpha1_MyController(in *mycode.MyController, out *MyController, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_mycode_MyControllerSpec_To_v1alpha1_MyControllerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_mycode_MyControllerStatus_To_v1alpha1_MyControllerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_mycode_MyController_To_v1alpha1_MyController is an autogenerated conversion function.
func Convert_mycode_MyController_To_v1alpha1_MyController(in *mycode.MyController, out *MyController, s conversion.Scope) error {
	return autoConvert_mycode_MyController_To_v1alpha1_MyController(in, out, s)
}

func autoConvert_v1alpha1_MyControllerList_To_mycode_MyControllerList(in *MyControllerList, out *mycode.MyControllerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]mycode.MyController)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_MyControllerList_To_mycode_MyControllerList is an autogenerated conversion function.
func Convert_v1alpha1_MyControllerList_To_mycode_MyControllerList(in *MyControllerList, out *mycode.MyControllerList, s conversion.Scope) error {
	return autoConvert_v1alpha1_MyControllerList_To_mycode_MyControllerList(in, out, s)
}

func autoConvert_mycode_MyControllerList_To_v1alpha1_MyControllerList(in *mycode.MyControllerList, out *MyControllerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]MyController)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_mycode_MyControllerList_To_v1alpha1_MyControllerList is an autogenerated conversion function.
func Convert_mycode_MyControllerList_To_v1alpha1_MyControllerList(in *mycode.MyControllerList, out *MyControllerList, s conversion.Scope) error {
	return autoConvert_mycode_MyControllerList_To_v1alpha1_MyControllerList(in, out, s)
}

func autoConvert_v1alpha1_MyControllerSpec_To_mycode_MyControllerSpec(in *MyControllerSpec, out *mycode.MyControllerSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_MyControllerSpec_To_mycode_MyControllerSpec is an autogenerated conversion function.
func Convert_v1alpha1_MyControllerSpec_To_mycode_MyControllerSpec(in *MyControllerSpec, out *mycode.MyControllerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_MyControllerSpec_To_mycode_MyControllerSpec(in, out, s)
}

func autoConvert_mycode_MyControllerSpec_To_v1alpha1_MyControllerSpec(in *mycode.MyControllerSpec, out *MyControllerSpec, s conversion.Scope) error {
	return nil
}

// Convert_mycode_MyControllerSpec_To_v1alpha1_MyControllerSpec is an autogenerated conversion function.
func Convert_mycode_MyControllerSpec_To_v1alpha1_MyControllerSpec(in *mycode.MyControllerSpec, out *MyControllerSpec, s conversion.Scope) error {
	return autoConvert_mycode_MyControllerSpec_To_v1alpha1_MyControllerSpec(in, out, s)
}

func autoConvert_v1alpha1_MyControllerStatus_To_mycode_MyControllerStatus(in *MyControllerStatus, out *mycode.MyControllerStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_MyControllerStatus_To_mycode_MyControllerStatus is an autogenerated conversion function.
func Convert_v1alpha1_MyControllerStatus_To_mycode_MyControllerStatus(in *MyControllerStatus, out *mycode.MyControllerStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_MyControllerStatus_To_mycode_MyControllerStatus(in, out, s)
}

func autoConvert_mycode_MyControllerStatus_To_v1alpha1_MyControllerStatus(in *mycode.MyControllerStatus, out *MyControllerStatus, s conversion.Scope) error {
	return nil
}

// Convert_mycode_MyControllerStatus_To_v1alpha1_MyControllerStatus is an autogenerated conversion function.
func Convert_mycode_MyControllerStatus_To_v1alpha1_MyControllerStatus(in *mycode.MyControllerStatus, out *MyControllerStatus, s conversion.Scope) error {
	return autoConvert_mycode_MyControllerStatus_To_v1alpha1_MyControllerStatus(in, out, s)
}
